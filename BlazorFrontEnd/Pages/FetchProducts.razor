@using Shared.Models
@using System.Text.Json
@page "/fetch"

<h3>Product List</h3>

<ul>
    @if (products != null) // Check if the products list is loaded
    {
        foreach (var product in products) // Iterate through the products list
        {
            // Display product details including name, price, stock, and category
            <li>@product.Name - $@product.Price (@product.Stock in stock) - Category: @(product.Category?.Name ?? "Unknown")
            </li>
        }
    }
    else if (errorMessage != null) // Check if there is an error message
    {
        // Display the error message
        <li>@errorMessage</li>
    }
    else
    {
        // Display a loading message while data is being fetched
        <li>Loading...</li>
    }
</ul>

@* Inject the ProductService to fetch products *@
@inject ProductService ProductService

@code {
    private List<Product>? products; // List to store the fetched products
    private string? errorMessage; // Variable to store error messages

    // Lifecycle method that runs when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch products using the ProductService
            products = await ProductService.GetProductsAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }

}